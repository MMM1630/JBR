# Generated by Django 5.1.7 on 2025-04-04 11:21

import ckeditor_uploader.fields
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import jbr.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='', verbose_name='Логотип')),
                ('title', models.CharField(max_length=250, verbose_name='Описание')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Подробнее')),
            ],
            options={
                'verbose_name': 'О нас',
                'verbose_name_plural': 'О нас',
            },
        ),
        migrations.CreateModel(
            name='Application_needy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone_number', models.CharField(max_length=255, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Заявка нуждающегося',
                'verbose_name_plural': 'Заявка нуждающегося',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urls', models.URLField(verbose_name='Ссылка на банк')),
                ('qr_code', models.ImageField(upload_to='', verbose_name='QR код нужадющегося')),
            ],
            options={
                'verbose_name': 'Реквизиты нуждающегося',
                'verbose_name_plural': 'Реквизиты нуждающегося',
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Описание')),
                ('phone_number', models.CharField(default='+996', max_length=13, verbose_name='Наши контакты')),
                ('email', models.EmailField(default='user@gmial.com', max_length=254, verbose_name='@Email')),
                ('geolocation', models.URLField(verbose_name='Наш адрес')),
            ],
            options={
                'verbose_name': 'Контакты',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Dokument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate', models.ImageField(upload_to='', verbose_name='Сертификаты')),
            ],
            options={
                'verbose_name': 'Сертификаты',
                'verbose_name_plural': 'Сертификаты',
            },
        ),
        migrations.CreateModel(
            name='Founders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('surname', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('img', models.ImageField(upload_to='', verbose_name='Фото')),
                ('title', models.CharField(max_length=250, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Основатели',
                'verbose_name_plural': 'Основатели',
            },
        ),
        migrations.CreateModel(
            name='Guarantee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duty', models.TextField(verbose_name='Обязанности')),
                ('duty_file', models.FileField(upload_to='', verbose_name='Файл с информацией')),
            ],
            options={
                'verbose_name': 'Гарантия',
                'verbose_name_plural': 'Гарантия',
            },
        ),
        migrations.CreateModel(
            name='NeedyDisplay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('surname', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('age', models.IntegerField(verbose_name='Возраст')),
                ('diagnosis', models.CharField(blank=True, max_length=255, null=True, verbose_name='Диагноз')),
                ('treatment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Требуется лечение')),
                ('sum', models.IntegerField(blank=True, null=True, verbose_name='Сумма для сбора')),
                ('sum_usd', models.FloatField(blank=True, null=True, verbose_name='Сумма в долларах')),
                ('collected', models.IntegerField(blank=True, null=True, verbose_name='Собранная сумма')),
            ],
            options={
                'verbose_name': 'Дисплей нуждающегося',
                'verbose_name_plural': 'Дисплей нуждающегося',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='', verbose_name='Фото')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Подробнее')),
                ('create_date', models.DateField(verbose_name='Время добовление')),
                ('active', models.BooleanField(verbose_name='Активные новости')),
            ],
            options={
                'verbose_name': 'Новости',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='Номер телефона')),
                ('groups', models.ManyToManyField(related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NeedyDisplayDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='needy_display/documents/', verbose_name='Документ')),
                ('needy_display', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='jbr.needydisplay')),
            ],
            options={
                'verbose_name': 'Документ дисплея',
                'verbose_name_plural': 'Документы дисплея',
            },
        ),
        migrations.CreateModel(
            name='NeedyDisplayPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='needy_display/photos/', verbose_name='Фотография')),
                ('needy_display', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='jbr.needydisplay')),
            ],
            options={
                'verbose_name': 'Фото дисплея',
                'verbose_name_plural': 'Фотографии дисплея',
            },
        ),
        migrations.CreateModel(
            name='NeedyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Номер телефона')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('surname', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('diagnosis', models.CharField(blank=True, max_length=255, null=True, verbose_name='Диагноз')),
                ('treatment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Требуется лечение')),
                ('sum', models.IntegerField(blank=True, null=True, verbose_name='Сумма для сбора')),
                ('sum_usd', models.FloatField(blank=True, editable=False, null=True, verbose_name='Сумма в долларах')),
                ('collected', models.IntegerField(blank=True, null=True, verbose_name='Собранная сумма')),
                ('active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Сбор')),
                ('password', models.CharField(default=jbr.models.generate_password, editable=False, max_length=8, verbose_name='Пароль')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Личный кабинет для нуждающегося',
                'verbose_name_plural': 'Личный кабинет для нуждающегося',
            },
        ),
        migrations.AddField(
            model_name='needydisplay',
            name='needy_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jbr.needyprofile'),
        ),
        migrations.CreateModel(
            name='DokumentsNeedy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dokument', models.FileField(upload_to='needy_profiles/dokuments/', verbose_name='Документ')),
                ('needy_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='jbr.needyprofile', verbose_name='Документы нуждающегося')),
            ],
            options={
                'verbose_name': 'Документы нуждающегося',
                'verbose_name_plural': 'Документы нуждающегося',
            },
        ),
        migrations.CreateModel(
            name='NeedyProfilePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='needy_profiles/photos/', verbose_name='Фото')),
                ('needy_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jbr.needyprofile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Фото профиля',
                'verbose_name_plural': 'Фотографии профиля',
            },
        ),
        migrations.CreateModel(
            name='HelpedNeedy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='helped_needy/', verbose_name='Фото')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('surname', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('age', models.IntegerField(verbose_name='Возраст')),
                ('diagnosis', models.CharField(max_length=255, verbose_name='Диагноз')),
                ('treatment', models.CharField(max_length=255, verbose_name='Лечение')),
                ('photos', models.ManyToManyField(blank=True, related_name='helped_needy_photos', to='jbr.needyprofilephoto')),
            ],
            options={
                'verbose_name': 'Кому помогли',
                'verbose_name_plural': 'Кому помогли',
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('surname', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('img', models.ImageField(upload_to='volunteers_photos/', verbose_name='Фото')),
                ('needy_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='jbr.needyprofile')),
            ],
            options={
                'verbose_name': 'Валантеры',
                'verbose_name_plural': 'Валантеры',
            },
        ),
        migrations.CreateModel(
            name='VolunteerAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='assigned', max_length=20)),
                ('needy_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jbr.needyprofile')),
                ('volunteer_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jbr.volunteer')),
            ],
        ),
    ]
